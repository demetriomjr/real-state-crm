{
  "summary": {
    "total": 0,
    "passed": 0,
    "failed": 0,
    "skipped": 0,
    "coverage": 0,
    "duration": 10141,
    "categories": {
      "unit": {
        "category": "unit",
        "success": false,
        "exitCode": 1,
        "output": "\n> real-state-crm-server@1.0.0 test:unit\n> jest tests/unit --config jest.config.js\n\n",
        "errorOutput": "ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/authorization.controller.spec.ts\n  ● Console\n\n    console.log\n      [dotenv@17.2.1] injecting env (0) from ..\\.env -- tip: ⚙️  write to custom object with { processEnv: myObject }\n\n      at _log (node_modules/dotenv/lib/main.js:139:11)\n\n  ● AuthorizationController (Unit) › logout › should successfully logout and invalidate token\n\n    UnauthorizedException: Invalid authorization header\n\n    \u001b[0m \u001b[90m 55 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mauthHeader \u001b[33m||\u001b[39m \u001b[33m!\u001b[39mauthHeader\u001b[33m.\u001b[39mstartsWith(\u001b[32m'Bearer '\u001b[39m)) {\n     \u001b[90m 56 |\u001b[39m       \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogger\u001b[33m.\u001b[39mwarn(\u001b[32m'Logout failed: Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 57 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mUnauthorizedException\u001b[39m(\u001b[32m'Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 58 |\u001b[39m     }\n     \u001b[90m 59 |\u001b[39m\n     \u001b[90m 60 |\u001b[39m     \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m authHeader\u001b[33m.\u001b[39msubstring(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Remove 'Bearer ' prefix\u001b[39m\u001b[0m\n\n      at AuthorizationController.logout (src/Application/Controllers/authorization.controller.ts:57:13)\n      at Object.<anonymous> (tests/unit/authorization.controller.spec.ts:96:39)\n\n  ● AuthorizationController (Unit) › refresh › should refresh token successfully\n\n    UnauthorizedException: Invalid authorization header\n\n    \u001b[0m \u001b[90m 84 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mauthHeader \u001b[33m||\u001b[39m \u001b[33m!\u001b[39mauthHeader\u001b[33m.\u001b[39mstartsWith(\u001b[32m'Bearer '\u001b[39m)) {\n     \u001b[90m 85 |\u001b[39m       \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogger\u001b[33m.\u001b[39mwarn(\u001b[32m'Token refresh failed: Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 86 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mUnauthorizedException\u001b[39m(\u001b[32m'Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 87 |\u001b[39m     }\n     \u001b[90m 88 |\u001b[39m\n     \u001b[90m 89 |\u001b[39m     \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m authHeader\u001b[33m.\u001b[39msubstring(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Remove 'Bearer ' prefix\u001b[39m\u001b[0m\n\n      at AuthorizationController.refresh (src/Application/Controllers/authorization.controller.ts:86:13)\n      at Object.<anonymous> (tests/unit/authorization.controller.spec.ts:113:39)\n\n  ● AuthorizationController (Unit) › refresh › should throw UnauthorizedException when refresh fails\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"invalid-token\"\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 127 |\u001b[39m         \u001b[33mUnauthorizedException\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 128 |\u001b[39m       )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 129 |\u001b[39m       expect(service\u001b[33m.\u001b[39mrefreshToken)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(token)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 130 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 131 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 132 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/unit/authorization.controller.spec.ts:129:36)\n\nPASS tests/unit/user.controller.spec.ts\n  ● Console\n\n    console.log\n      [dotenv@17.2.1] injecting env (0) from ..\\.env -- tip: ⚙️  write to custom object with { processEnv: myObject }\n\n      at _log (node_modules/dotenv/lib/main.js:139:11)\n\nFAIL tests/unit/business.controller.spec.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'tenant_id' does not exist on type 'Business'.\n\n    \u001b[7m154\u001b[0m     const tenantId = existingBusiness.tenant_id;\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'purgeByTenant' does not exist on type 'UserRepository'.\n\n    \u001b[7m165\u001b[0m       await this.userRepository.purgeByTenant(tenantId);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 2 failed, 1 passed, 3 total\nTests:       3 failed, 14 passed, 17 total\nSnapshots:   0 total\nTime:        3.987 s\nRan all test suites matching /tests\\\\unit/i.\n",
        "duration": 4775,
        "timestamp": "2025-08-20T17:10:10.480Z",
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "coverage": 0
      },
      "integration": {
        "category": "integration",
        "success": false,
        "exitCode": 1,
        "output": "\n> real-state-crm-server@1.0.0 test:integration\n> jest tests/integration --config jest.config.js\n\n",
        "errorOutput": "ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/business.integration.spec.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'tenant_id' does not exist on type 'Business'.\n\n    \u001b[7m154\u001b[0m     const tenantId = existingBusiness.tenant_id;\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'purgeByTenant' does not exist on type 'UserRepository'.\n\n    \u001b[7m165\u001b[0m       await this.userRepository.purgeByTenant(tenantId);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/integration/authorization.integration.spec.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'tenant_id' does not exist on type 'Business'.\n\n    \u001b[7m154\u001b[0m     const tenantId = existingBusiness.tenant_id;\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'purgeByTenant' does not exist on type 'UserRepository'.\n\n    \u001b[7m165\u001b[0m       await this.userRepository.purgeByTenant(tenantId);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 2 failed, 2 total\nTests:       0 total\nSnapshots:   0 total\nTime:        3.9 s\nRan all test suites matching /tests\\\\integration/i.\n",
        "duration": 4646,
        "timestamp": "2025-08-20T17:10:15.132Z",
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "coverage": 0
      },
      "e2e": {
        "category": "e2e",
        "success": false,
        "exitCode": 1,
        "output": "\n> real-state-crm-server@1.0.0 test:e2e\n> jest tests/e2e --config jest.config.js\n\nNo tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn D:\\PROJETOS\\real-state-crm\\server\n  58 files checked.\n  roots: D:\\PROJETOS\\real-state-crm\\server\\src, D:\\PROJETOS\\real-state-crm\\server\\tests - 58 matches\n  testMatch:  - 0 matches\n  testPathIgnorePatterns: \\\\node_modules\\\\, \\\\dist\\\\ - 58 matches\n  testRegex: .*\\.spec\\.ts$ - 5 matches\nPattern: tests\\\\e2e - 0 matches\n",
        "errorOutput": "",
        "duration": 713,
        "timestamp": "2025-08-20T17:10:15.846Z",
        "passed": 0,
        "failed": 0,
        "skipped": 0,
        "coverage": 0
      }
    }
  },
  "results": [
    {
      "category": "unit",
      "success": false,
      "exitCode": 1,
      "output": "\n> real-state-crm-server@1.0.0 test:unit\n> jest tests/unit --config jest.config.js\n\n",
      "errorOutput": "ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/unit/authorization.controller.spec.ts\n  ● Console\n\n    console.log\n      [dotenv@17.2.1] injecting env (0) from ..\\.env -- tip: ⚙️  write to custom object with { processEnv: myObject }\n\n      at _log (node_modules/dotenv/lib/main.js:139:11)\n\n  ● AuthorizationController (Unit) › logout › should successfully logout and invalidate token\n\n    UnauthorizedException: Invalid authorization header\n\n    \u001b[0m \u001b[90m 55 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mauthHeader \u001b[33m||\u001b[39m \u001b[33m!\u001b[39mauthHeader\u001b[33m.\u001b[39mstartsWith(\u001b[32m'Bearer '\u001b[39m)) {\n     \u001b[90m 56 |\u001b[39m       \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogger\u001b[33m.\u001b[39mwarn(\u001b[32m'Logout failed: Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 57 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mUnauthorizedException\u001b[39m(\u001b[32m'Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 58 |\u001b[39m     }\n     \u001b[90m 59 |\u001b[39m\n     \u001b[90m 60 |\u001b[39m     \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m authHeader\u001b[33m.\u001b[39msubstring(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Remove 'Bearer ' prefix\u001b[39m\u001b[0m\n\n      at AuthorizationController.logout (src/Application/Controllers/authorization.controller.ts:57:13)\n      at Object.<anonymous> (tests/unit/authorization.controller.spec.ts:96:39)\n\n  ● AuthorizationController (Unit) › refresh › should refresh token successfully\n\n    UnauthorizedException: Invalid authorization header\n\n    \u001b[0m \u001b[90m 84 |\u001b[39m     \u001b[36mif\u001b[39m (\u001b[33m!\u001b[39mauthHeader \u001b[33m||\u001b[39m \u001b[33m!\u001b[39mauthHeader\u001b[33m.\u001b[39mstartsWith(\u001b[32m'Bearer '\u001b[39m)) {\n     \u001b[90m 85 |\u001b[39m       \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39mlogger\u001b[33m.\u001b[39mwarn(\u001b[32m'Token refresh failed: Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 86 |\u001b[39m       \u001b[36mthrow\u001b[39m \u001b[36mnew\u001b[39m \u001b[33mUnauthorizedException\u001b[39m(\u001b[32m'Invalid authorization header'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 87 |\u001b[39m     }\n     \u001b[90m 88 |\u001b[39m\n     \u001b[90m 89 |\u001b[39m     \u001b[36mconst\u001b[39m token \u001b[33m=\u001b[39m authHeader\u001b[33m.\u001b[39msubstring(\u001b[35m7\u001b[39m)\u001b[33m;\u001b[39m \u001b[90m// Remove 'Bearer ' prefix\u001b[39m\u001b[0m\n\n      at AuthorizationController.refresh (src/Application/Controllers/authorization.controller.ts:86:13)\n      at Object.<anonymous> (tests/unit/authorization.controller.spec.ts:113:39)\n\n  ● AuthorizationController (Unit) › refresh › should throw UnauthorizedException when refresh fails\n\n    expect(jest.fn()).toHaveBeenCalledWith(...expected)\n\n    Expected: \"invalid-token\"\n\n    Number of calls: 0\n\n    \u001b[0m \u001b[90m 127 |\u001b[39m         \u001b[33mUnauthorizedException\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 128 |\u001b[39m       )\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 129 |\u001b[39m       expect(service\u001b[33m.\u001b[39mrefreshToken)\u001b[33m.\u001b[39mtoHaveBeenCalledWith(token)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 130 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 131 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 132 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.<anonymous> (tests/unit/authorization.controller.spec.ts:129:36)\n\nPASS tests/unit/user.controller.spec.ts\n  ● Console\n\n    console.log\n      [dotenv@17.2.1] injecting env (0) from ..\\.env -- tip: ⚙️  write to custom object with { processEnv: myObject }\n\n      at _log (node_modules/dotenv/lib/main.js:139:11)\n\nFAIL tests/unit/business.controller.spec.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'tenant_id' does not exist on type 'Business'.\n\n    \u001b[7m154\u001b[0m     const tenantId = existingBusiness.tenant_id;\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'purgeByTenant' does not exist on type 'UserRepository'.\n\n    \u001b[7m165\u001b[0m       await this.userRepository.purgeByTenant(tenantId);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 2 failed, 1 passed, 3 total\nTests:       3 failed, 14 passed, 17 total\nSnapshots:   0 total\nTime:        3.987 s\nRan all test suites matching /tests\\\\unit/i.\n",
      "duration": 4775,
      "timestamp": "2025-08-20T17:10:10.480Z",
      "passed": 0,
      "failed": 0,
      "skipped": 0,
      "coverage": 0
    },
    {
      "category": "integration",
      "success": false,
      "exitCode": 1,
      "output": "\n> real-state-crm-server@1.0.0 test:integration\n> jest tests/integration --config jest.config.js\n\n",
      "errorOutput": "ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do\ntransform: {\n    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],\n},\nSee more at https://kulshekhar.github.io/ts-jest/docs/getting-started/presets#advanced\nFAIL tests/integration/business.integration.spec.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'tenant_id' does not exist on type 'Business'.\n\n    \u001b[7m154\u001b[0m     const tenantId = existingBusiness.tenant_id;\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'purgeByTenant' does not exist on type 'UserRepository'.\n\n    \u001b[7m165\u001b[0m       await this.userRepository.purgeByTenant(tenantId);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\n\nFAIL tests/integration/authorization.integration.spec.ts\n  ● Test suite failed to run\n\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m154\u001b[0m:\u001b[93m39\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'tenant_id' does not exist on type 'Business'.\n\n    \u001b[7m154\u001b[0m     const tenantId = existingBusiness.tenant_id;\n    \u001b[7m   \u001b[0m \u001b[91m                                      ~~~~~~~~~\u001b[0m\n    \u001b[96msrc/Application/Services/business.service.ts\u001b[0m:\u001b[93m165\u001b[0m:\u001b[93m33\u001b[0m - \u001b[91merror\u001b[0m\u001b[90m TS2339: \u001b[0mProperty 'purgeByTenant' does not exist on type 'UserRepository'.\n\n    \u001b[7m165\u001b[0m       await this.userRepository.purgeByTenant(tenantId);\n    \u001b[7m   \u001b[0m \u001b[91m                                ~~~~~~~~~~~~~\u001b[0m\n\nTest Suites: 2 failed, 2 total\nTests:       0 total\nSnapshots:   0 total\nTime:        3.9 s\nRan all test suites matching /tests\\\\integration/i.\n",
      "duration": 4646,
      "timestamp": "2025-08-20T17:10:15.132Z",
      "passed": 0,
      "failed": 0,
      "skipped": 0,
      "coverage": 0
    },
    {
      "category": "e2e",
      "success": false,
      "exitCode": 1,
      "output": "\n> real-state-crm-server@1.0.0 test:e2e\n> jest tests/e2e --config jest.config.js\n\nNo tests found, exiting with code 1\nRun with `--passWithNoTests` to exit with code 0\nIn D:\\PROJETOS\\real-state-crm\\server\n  58 files checked.\n  roots: D:\\PROJETOS\\real-state-crm\\server\\src, D:\\PROJETOS\\real-state-crm\\server\\tests - 58 matches\n  testMatch:  - 0 matches\n  testPathIgnorePatterns: \\\\node_modules\\\\, \\\\dist\\\\ - 58 matches\n  testRegex: .*\\.spec\\.ts$ - 5 matches\nPattern: tests\\\\e2e - 0 matches\n",
      "errorOutput": "",
      "duration": 713,
      "timestamp": "2025-08-20T17:10:15.846Z",
      "passed": 0,
      "failed": 0,
      "skipped": 0,
      "coverage": 0
    }
  ],
  "timestamp": "2025-08-20T17:10:15.847Z",
  "environment": {
    "nodeEnv": "test",
    "testUser": "admin",
    "majesticPort": "4000"
  }
}